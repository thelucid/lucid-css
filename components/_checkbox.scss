@include palettes((
  checkbox: (
    foreground: palette(accent),
    background: palette(panel),
    border: palette(foreground, tint),
    shadow: palette(shadow),
    checked: (
      foreground: palette(panel),
      background: palette(accent),
      border: shade(palette(accent), 5%)
    )
  )
));

@include sizes((
  checkbox: (
    extent: size(spacing),
    label: (
      trailer: .25em
    )
  )
));

.c-checkbox {
  position: relative;
  padding-left: size(checkbox, extent) + size(spacing, small);
  margin-bottom: - size(checkbox, label, trailer);
}
.c-checkbox__control {
  position: absolute;
  z-index: -1;
  opacity: 0;
}
.c-checkbox__label {
  // Designed to override '.c-label', which is relative.
  position: static !important;
  margin-bottom: size(checkbox, label, trailer);
  
  &:before, &:after {
    content: '';
    display: block;
    position: absolute;
  }
  
  &:before {
    top: 0;
    left: 0;
    width: size(checkbox, extent);
    height: size(checkbox, extent);
    border-radius: size(radius);
    background: palette(checkbox, background);
    box-shadow: inset 0 0 0 1px palette(checkbox, border),
                0 1px 0 palette(checkbox, shadow);
    
    .c-checkbox__control:checked + & {
      background: palette(checkbox, checked, background);
      box-shadow: inset 0 0 0 1px palette(checkbox, checked, border),
                  0 1px 0 palette(checkbox, shadow);
    }
  }
  &:after {
    .c-checkbox__control:checked + & {
      top: size(checkbox, extent) / 2;
      left: size(checkbox, extent) / 2;
      width: size(checkbox, extent) * .3;
      height: size(checkbox, extent) * .6;
      margin-left: size(checkbox, extent) * -.15;
      margin-top: size(checkbox, extent) * -.37;
      transform: rotate(45deg);
      box-shadow: inset -2px -2px 0 palette(checkbox, checked, foreground);
    }
  }
}